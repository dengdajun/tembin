package com.alibabasmt.database.smtshipping.model;

import java.util.ArrayList;
import java.util.List;

public class SmtShippingSelfdefineExample {
    /**
     * This field was generated by MyBatis Generator.
     * This field corresponds to the database table smt_shipping_selfdefine
     *
     * @mbggenerated
     */
    protected String orderByClause;

    /**
     * This field was generated by MyBatis Generator.
     * This field corresponds to the database table smt_shipping_selfdefine
     *
     * @mbggenerated
     */
    protected boolean distinct;

    /**
     * This field was generated by MyBatis Generator.
     * This field corresponds to the database table smt_shipping_selfdefine
     *
     * @mbggenerated
     */
    protected List<Criteria> oredCriteria;

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table smt_shipping_selfdefine
     *
     * @mbggenerated
     */
    public SmtShippingSelfdefineExample() {
        oredCriteria = new ArrayList<Criteria>();
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table smt_shipping_selfdefine
     *
     * @mbggenerated
     */
    public void setOrderByClause(String orderByClause) {
        this.orderByClause = orderByClause;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table smt_shipping_selfdefine
     *
     * @mbggenerated
     */
    public String getOrderByClause() {
        return orderByClause;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table smt_shipping_selfdefine
     *
     * @mbggenerated
     */
    public void setDistinct(boolean distinct) {
        this.distinct = distinct;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table smt_shipping_selfdefine
     *
     * @mbggenerated
     */
    public boolean isDistinct() {
        return distinct;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table smt_shipping_selfdefine
     *
     * @mbggenerated
     */
    public List<Criteria> getOredCriteria() {
        return oredCriteria;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table smt_shipping_selfdefine
     *
     * @mbggenerated
     */
    public void or(Criteria criteria) {
        oredCriteria.add(criteria);
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table smt_shipping_selfdefine
     *
     * @mbggenerated
     */
    public Criteria or() {
        Criteria criteria = createCriteriaInternal();
        oredCriteria.add(criteria);
        return criteria;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table smt_shipping_selfdefine
     *
     * @mbggenerated
     */
    public Criteria createCriteria() {
        Criteria criteria = createCriteriaInternal();
        if (oredCriteria.size() == 0) {
            oredCriteria.add(criteria);
        }
        return criteria;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table smt_shipping_selfdefine
     *
     * @mbggenerated
     */
    protected Criteria createCriteriaInternal() {
        Criteria criteria = new Criteria();
        return criteria;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table smt_shipping_selfdefine
     *
     * @mbggenerated
     */
    public void clear() {
        oredCriteria.clear();
        orderByClause = null;
        distinct = false;
    }

    /**
     * This class was generated by MyBatis Generator.
     * This class corresponds to the database table smt_shipping_selfdefine
     *
     * @mbggenerated
     */
    protected abstract static class GeneratedCriteria {
        protected List<Criterion> criteria;

        protected GeneratedCriteria() {
            super();
            criteria = new ArrayList<Criterion>();
        }

        public boolean isValid() {
            return criteria.size() > 0;
        }

        public List<Criterion> getCriteria() {
            return criteria;
        }

        protected void addCriterion(String condition) {
            if (condition == null) {
                throw new RuntimeException("Value for condition cannot be null");
            }
            criteria.add(new Criterion(condition));
        }

        protected void addCriterion(String condition, Object value, String property) {
            if (value == null) {
                throw new RuntimeException("Value for " + property + " cannot be null");
            }
            criteria.add(new Criterion(condition, value));
        }

        protected void addCriterion(String condition, Object value1, Object value2, String property) {
            if (value1 == null || value2 == null) {
                throw new RuntimeException("Between values for " + property + " cannot be null");
            }
            criteria.add(new Criterion(condition, value1, value2));
        }

        public Criteria andIdIsNull() {
            addCriterion("id is null");
            return (Criteria) this;
        }

        public Criteria andIdIsNotNull() {
            addCriterion("id is not null");
            return (Criteria) this;
        }

        public Criteria andIdEqualTo(Long value) {
            addCriterion("id =", value, "id");
            return (Criteria) this;
        }

        public Criteria andIdNotEqualTo(Long value) {
            addCriterion("id <>", value, "id");
            return (Criteria) this;
        }

        public Criteria andIdGreaterThan(Long value) {
            addCriterion("id >", value, "id");
            return (Criteria) this;
        }

        public Criteria andIdGreaterThanOrEqualTo(Long value) {
            addCriterion("id >=", value, "id");
            return (Criteria) this;
        }

        public Criteria andIdLessThan(Long value) {
            addCriterion("id <", value, "id");
            return (Criteria) this;
        }

        public Criteria andIdLessThanOrEqualTo(Long value) {
            addCriterion("id <=", value, "id");
            return (Criteria) this;
        }

        public Criteria andIdIn(List<Long> values) {
            addCriterion("id in", values, "id");
            return (Criteria) this;
        }

        public Criteria andIdNotIn(List<Long> values) {
            addCriterion("id not in", values, "id");
            return (Criteria) this;
        }

        public Criteria andIdBetween(Long value1, Long value2) {
            addCriterion("id between", value1, value2, "id");
            return (Criteria) this;
        }

        public Criteria andIdNotBetween(Long value1, Long value2) {
            addCriterion("id not between", value1, value2, "id");
            return (Criteria) this;
        }

        public Criteria andStartordernumIsNull() {
            addCriterion("startOrderNum is null");
            return (Criteria) this;
        }

        public Criteria andStartordernumIsNotNull() {
            addCriterion("startOrderNum is not null");
            return (Criteria) this;
        }

        public Criteria andStartordernumEqualTo(Integer value) {
            addCriterion("startOrderNum =", value, "startordernum");
            return (Criteria) this;
        }

        public Criteria andStartordernumNotEqualTo(Integer value) {
            addCriterion("startOrderNum <>", value, "startordernum");
            return (Criteria) this;
        }

        public Criteria andStartordernumGreaterThan(Integer value) {
            addCriterion("startOrderNum >", value, "startordernum");
            return (Criteria) this;
        }

        public Criteria andStartordernumGreaterThanOrEqualTo(Integer value) {
            addCriterion("startOrderNum >=", value, "startordernum");
            return (Criteria) this;
        }

        public Criteria andStartordernumLessThan(Integer value) {
            addCriterion("startOrderNum <", value, "startordernum");
            return (Criteria) this;
        }

        public Criteria andStartordernumLessThanOrEqualTo(Integer value) {
            addCriterion("startOrderNum <=", value, "startordernum");
            return (Criteria) this;
        }

        public Criteria andStartordernumIn(List<Integer> values) {
            addCriterion("startOrderNum in", values, "startordernum");
            return (Criteria) this;
        }

        public Criteria andStartordernumNotIn(List<Integer> values) {
            addCriterion("startOrderNum not in", values, "startordernum");
            return (Criteria) this;
        }

        public Criteria andStartordernumBetween(Integer value1, Integer value2) {
            addCriterion("startOrderNum between", value1, value2, "startordernum");
            return (Criteria) this;
        }

        public Criteria andStartordernumNotBetween(Integer value1, Integer value2) {
            addCriterion("startOrderNum not between", value1, value2, "startordernum");
            return (Criteria) this;
        }

        public Criteria andEndordernumIsNull() {
            addCriterion("endOrderNum is null");
            return (Criteria) this;
        }

        public Criteria andEndordernumIsNotNull() {
            addCriterion("endOrderNum is not null");
            return (Criteria) this;
        }

        public Criteria andEndordernumEqualTo(Integer value) {
            addCriterion("endOrderNum =", value, "endordernum");
            return (Criteria) this;
        }

        public Criteria andEndordernumNotEqualTo(Integer value) {
            addCriterion("endOrderNum <>", value, "endordernum");
            return (Criteria) this;
        }

        public Criteria andEndordernumGreaterThan(Integer value) {
            addCriterion("endOrderNum >", value, "endordernum");
            return (Criteria) this;
        }

        public Criteria andEndordernumGreaterThanOrEqualTo(Integer value) {
            addCriterion("endOrderNum >=", value, "endordernum");
            return (Criteria) this;
        }

        public Criteria andEndordernumLessThan(Integer value) {
            addCriterion("endOrderNum <", value, "endordernum");
            return (Criteria) this;
        }

        public Criteria andEndordernumLessThanOrEqualTo(Integer value) {
            addCriterion("endOrderNum <=", value, "endordernum");
            return (Criteria) this;
        }

        public Criteria andEndordernumIn(List<Integer> values) {
            addCriterion("endOrderNum in", values, "endordernum");
            return (Criteria) this;
        }

        public Criteria andEndordernumNotIn(List<Integer> values) {
            addCriterion("endOrderNum not in", values, "endordernum");
            return (Criteria) this;
        }

        public Criteria andEndordernumBetween(Integer value1, Integer value2) {
            addCriterion("endOrderNum between", value1, value2, "endordernum");
            return (Criteria) this;
        }

        public Criteria andEndordernumNotBetween(Integer value1, Integer value2) {
            addCriterion("endOrderNum not between", value1, value2, "endordernum");
            return (Criteria) this;
        }

        public Criteria andMinfreightIsNull() {
            addCriterion("minFreight is null");
            return (Criteria) this;
        }

        public Criteria andMinfreightIsNotNull() {
            addCriterion("minFreight is not null");
            return (Criteria) this;
        }

        public Criteria andMinfreightEqualTo(Double value) {
            addCriterion("minFreight =", value, "minfreight");
            return (Criteria) this;
        }

        public Criteria andMinfreightNotEqualTo(Double value) {
            addCriterion("minFreight <>", value, "minfreight");
            return (Criteria) this;
        }

        public Criteria andMinfreightGreaterThan(Double value) {
            addCriterion("minFreight >", value, "minfreight");
            return (Criteria) this;
        }

        public Criteria andMinfreightGreaterThanOrEqualTo(Double value) {
            addCriterion("minFreight >=", value, "minfreight");
            return (Criteria) this;
        }

        public Criteria andMinfreightLessThan(Double value) {
            addCriterion("minFreight <", value, "minfreight");
            return (Criteria) this;
        }

        public Criteria andMinfreightLessThanOrEqualTo(Double value) {
            addCriterion("minFreight <=", value, "minfreight");
            return (Criteria) this;
        }

        public Criteria andMinfreightIn(List<Double> values) {
            addCriterion("minFreight in", values, "minfreight");
            return (Criteria) this;
        }

        public Criteria andMinfreightNotIn(List<Double> values) {
            addCriterion("minFreight not in", values, "minfreight");
            return (Criteria) this;
        }

        public Criteria andMinfreightBetween(Double value1, Double value2) {
            addCriterion("minFreight between", value1, value2, "minfreight");
            return (Criteria) this;
        }

        public Criteria andMinfreightNotBetween(Double value1, Double value2) {
            addCriterion("minFreight not between", value1, value2, "minfreight");
            return (Criteria) this;
        }

        public Criteria andPeraddnumIsNull() {
            addCriterion("perAddNum is null");
            return (Criteria) this;
        }

        public Criteria andPeraddnumIsNotNull() {
            addCriterion("perAddNum is not null");
            return (Criteria) this;
        }

        public Criteria andPeraddnumEqualTo(Integer value) {
            addCriterion("perAddNum =", value, "peraddnum");
            return (Criteria) this;
        }

        public Criteria andPeraddnumNotEqualTo(Integer value) {
            addCriterion("perAddNum <>", value, "peraddnum");
            return (Criteria) this;
        }

        public Criteria andPeraddnumGreaterThan(Integer value) {
            addCriterion("perAddNum >", value, "peraddnum");
            return (Criteria) this;
        }

        public Criteria andPeraddnumGreaterThanOrEqualTo(Integer value) {
            addCriterion("perAddNum >=", value, "peraddnum");
            return (Criteria) this;
        }

        public Criteria andPeraddnumLessThan(Integer value) {
            addCriterion("perAddNum <", value, "peraddnum");
            return (Criteria) this;
        }

        public Criteria andPeraddnumLessThanOrEqualTo(Integer value) {
            addCriterion("perAddNum <=", value, "peraddnum");
            return (Criteria) this;
        }

        public Criteria andPeraddnumIn(List<Integer> values) {
            addCriterion("perAddNum in", values, "peraddnum");
            return (Criteria) this;
        }

        public Criteria andPeraddnumNotIn(List<Integer> values) {
            addCriterion("perAddNum not in", values, "peraddnum");
            return (Criteria) this;
        }

        public Criteria andPeraddnumBetween(Integer value1, Integer value2) {
            addCriterion("perAddNum between", value1, value2, "peraddnum");
            return (Criteria) this;
        }

        public Criteria andPeraddnumNotBetween(Integer value1, Integer value2) {
            addCriterion("perAddNum not between", value1, value2, "peraddnum");
            return (Criteria) this;
        }

        public Criteria andAddfreightIsNull() {
            addCriterion("addFreight is null");
            return (Criteria) this;
        }

        public Criteria andAddfreightIsNotNull() {
            addCriterion("addFreight is not null");
            return (Criteria) this;
        }

        public Criteria andAddfreightEqualTo(Double value) {
            addCriterion("addFreight =", value, "addfreight");
            return (Criteria) this;
        }

        public Criteria andAddfreightNotEqualTo(Double value) {
            addCriterion("addFreight <>", value, "addfreight");
            return (Criteria) this;
        }

        public Criteria andAddfreightGreaterThan(Double value) {
            addCriterion("addFreight >", value, "addfreight");
            return (Criteria) this;
        }

        public Criteria andAddfreightGreaterThanOrEqualTo(Double value) {
            addCriterion("addFreight >=", value, "addfreight");
            return (Criteria) this;
        }

        public Criteria andAddfreightLessThan(Double value) {
            addCriterion("addFreight <", value, "addfreight");
            return (Criteria) this;
        }

        public Criteria andAddfreightLessThanOrEqualTo(Double value) {
            addCriterion("addFreight <=", value, "addfreight");
            return (Criteria) this;
        }

        public Criteria andAddfreightIn(List<Double> values) {
            addCriterion("addFreight in", values, "addfreight");
            return (Criteria) this;
        }

        public Criteria andAddfreightNotIn(List<Double> values) {
            addCriterion("addFreight not in", values, "addfreight");
            return (Criteria) this;
        }

        public Criteria andAddfreightBetween(Double value1, Double value2) {
            addCriterion("addFreight between", value1, value2, "addfreight");
            return (Criteria) this;
        }

        public Criteria andAddfreightNotBetween(Double value1, Double value2) {
            addCriterion("addFreight not between", value1, value2, "addfreight");
            return (Criteria) this;
        }

        public Criteria andParentIdIsNull() {
            addCriterion("parent_id is null");
            return (Criteria) this;
        }

        public Criteria andParentIdIsNotNull() {
            addCriterion("parent_id is not null");
            return (Criteria) this;
        }

        public Criteria andParentIdEqualTo(Long value) {
            addCriterion("parent_id =", value, "parentId");
            return (Criteria) this;
        }

        public Criteria andParentIdNotEqualTo(Long value) {
            addCriterion("parent_id <>", value, "parentId");
            return (Criteria) this;
        }

        public Criteria andParentIdGreaterThan(Long value) {
            addCriterion("parent_id >", value, "parentId");
            return (Criteria) this;
        }

        public Criteria andParentIdGreaterThanOrEqualTo(Long value) {
            addCriterion("parent_id >=", value, "parentId");
            return (Criteria) this;
        }

        public Criteria andParentIdLessThan(Long value) {
            addCriterion("parent_id <", value, "parentId");
            return (Criteria) this;
        }

        public Criteria andParentIdLessThanOrEqualTo(Long value) {
            addCriterion("parent_id <=", value, "parentId");
            return (Criteria) this;
        }

        public Criteria andParentIdIn(List<Long> values) {
            addCriterion("parent_id in", values, "parentId");
            return (Criteria) this;
        }

        public Criteria andParentIdNotIn(List<Long> values) {
            addCriterion("parent_id not in", values, "parentId");
            return (Criteria) this;
        }

        public Criteria andParentIdBetween(Long value1, Long value2) {
            addCriterion("parent_id between", value1, value2, "parentId");
            return (Criteria) this;
        }

        public Criteria andParentIdNotBetween(Long value1, Long value2) {
            addCriterion("parent_id not between", value1, value2, "parentId");
            return (Criteria) this;
        }
    }

    /**
     * This class was generated by MyBatis Generator.
     * This class corresponds to the database table smt_shipping_selfdefine
     *
     * @mbggenerated do_not_delete_during_merge
     */
    public static class Criteria extends GeneratedCriteria {

        protected Criteria() {
            super();
        }
    }

    /**
     * This class was generated by MyBatis Generator.
     * This class corresponds to the database table smt_shipping_selfdefine
     *
     * @mbggenerated
     */
    public static class Criterion {
        private String condition;

        private Object value;

        private Object secondValue;

        private boolean noValue;

        private boolean singleValue;

        private boolean betweenValue;

        private boolean listValue;

        public String getCondition() {
            return condition;
        }

        public Object getValue() {
            return value;
        }

        public Object getSecondValue() {
            return secondValue;
        }

        public boolean isNoValue() {
            return noValue;
        }

        public boolean isSingleValue() {
            return singleValue;
        }

        public boolean isBetweenValue() {
            return betweenValue;
        }

        public boolean isListValue() {
            return listValue;
        }

        protected Criterion(String condition) {
            super();
            this.condition = condition;
            this.noValue = true;
        }

        protected Criterion(String condition, Object value) {
            super();
            this.condition = condition;
            this.value = value;
            if (value instanceof List<?>) {
                this.listValue = true;
            } else {
                this.singleValue = true;
            }
        }

        protected Criterion(String condition, Object value, Object secondValue) {
            super();
            this.condition = condition;
            this.value = value;
            this.secondValue = secondValue;
            this.betweenValue = true;
        }
    }
}